

class ImGuiPresenter {
    static ImGuiPresenter* getInstance();

    float scaleAllByDPI(float userScale = 1.0f);

    float enableDPIScale(float userScale = 1.0f);
    
    float getContentZoomFactor() ;

    //void addFont(std::string fontFile, float fontSize, CHS_GLYPH_RANGE glyphRange);
    void removeFont(std::string fontFile);
    void clearFonts();


    void image(cc.Texture2D* tex,
               ImVec2 size,
               ImVec2 uv0        = ImVec2(0, 0),
               ImVec2 uv1        = ImVec2(1, 1),
               ImVec4 tint_col   = ImVec4(1, 1, 1, 1),
               ImVec4 border_col = ImVec4(0, 0, 0, 0));
    void image(cc.Sprite* sprite,
               ImVec2 size,
               bool keepAspectRatio = true,
               ImVec4 tint_col   = ImVec4(1, 1, 1, 1),
               ImVec4 border_col = ImVec4(0, 0, 0, 0));
    void image(cc.SpriteFrame* spriteFrame,
               ImVec2 size,
               bool keepAspectRatio     = true,
               ImVec4 tint_col   = ImVec4(1, 1, 1, 1),
               ImVec4 border_col = ImVec4(0, 0, 0, 0));
    bool imageButton(cc.Texture2D* tex,
                     ImVec2 size,
                     ImVec2 uv0      = ImVec2(0, 0),
                     ImVec2 uv1      = ImVec2(1, 1),
                     int frame_padding      = -1,
                     ImVec4 bg_col   = ImVec4(0, 0, 0, 0),
                     ImVec4 tint_col = ImVec4(1, 1, 1, 1));
    bool imageButton(cc.Sprite* sprite,
                     ImVec2 size,
                     int frame_padding      = -1,
                     ImVec4 bg_col   = ImVec4(0, 0, 0, 0),
                     ImVec4 tint_col = ImVec4(1, 1, 1, 1));
}