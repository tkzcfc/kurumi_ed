$#include "core/Tools.h"


class Tools
{
public:
	static bool openFileMultiSelect(std::string InFilter, StringArray* OutPathArr);
	
	static std::string GbkToUtf8(std::string strGbk);

	static std::string Utf8ToGbk(std::string strUtf8);
	
	static std::string getFilename(std::string InPath);
	
	static bool isInRect(cc.Node* InNode, const float InX, const float InY);
	
	static long getMillisecond();
	
	static bool copyFile(std::string existingFileName, std::string newFileName, bool bFailIfExists);
	
	static std::string replaceString(std::string str, std::string targetstr, std::string replacestr);
	
	static void runExe(std::string exe, std::string cmd);
	
	static void* getImguiTextureID(std::string key, bool isPlist = false);
	
	static void retainImageuiTexture(void* textureId);
	
	static void freeImageuiTexture(void* textureId);
	
	static void* getImguiTextureIDByTexture(cc.Texture2D* texture);

	static int getImguiTextureWidth(std::string key, bool isPlist = false);

	static int getImguiTextureHeight(std::string key, bool isPlist = false);
	
	static bool imgui_inputText(const char* label, std::string& buf, unsigned int buf_size, unsigned int flags = 0);
	
	static std::vector<std::string> getLogicalDriveStrings();
	
	static std::string UTS(std::string str);

	static std::string STU(std::string str);
	
	static int bor_int32(int a, int b);
	
	static unsigned int bor_uint32(unsigned int a, unsigned int b);
	
	static Size getWindowSize();
	
	static bool          BeginTabItem_NoClose(const char* label, int flags = 0);
	
	static ImVec2 getMouseClickedPos(int index);
	
	static bool BeginWindow_NoClose(const char* name, int flags);
	
	static bool check_AcceptDragDropPayload(const char* type, int flags = 0);

	static std::string AcceptDragDropPayload(const char* type, int flags = 0);
	
	static ImVec4 getStyleColor(int type);
	
	static bool copyFile(std::string srcFile, std::string dstFile);
	
	static void enumerateChildren(cc.Node* node, std::string name, LuaFunction handle);
	
	static std::string prettyJson(const char* json);
	
	static int imguiComboUserdata(const char* label, int current_item);
	
	static bool imguiComboBool(const char* label, bool current_item);
	
	static int imguiCombo_OneLiner(const char* name, int curIndex, const char* items);
	
	static void helpMarker(const char* desc);
	
	static std::vector<std::string> splitPlist(std::string plist);
	
	static std::vector<std::string> getArematureMovementNames(ccs.Armature* armature);
	
	static std::vector<int> getArematureMovementDurations(ccs.Armature* armature);
	
	static double gettime();
	
	static void setImgUIGlobalScale(float scale);
	
	static float getDPI();
	
	static void relaunch();;
	
	static bool onGUIFontList();

	static bool setImguiFontName(const char* fontName);

	static std::string getImguiFontName();
};